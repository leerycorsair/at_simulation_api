type Template_{{ template_name }} struct {
	UsageName string
	HasTriggeredBefore bool
	HasTriggeredAfter bool
	CurrentTick int
	Duration int
	IsActive bool

	{% for param in params %}
	{{ param.name }} *{{ param.type }}
	{% endfor %}
}

func (t *Template_{{ template_name }}) Execute() {
	if t.CurrentTick > t.Duration {
		{{ body_after }}

		t.IsActive = false
		t.CurrentTick = 0
		t.HasTriggeredAfter = true
	}

	if !t.IsActive && {{ condition }} {
		t.IsActive = true

		{{ body_before }}

		t.CurrentTick += 1
		t.HasTriggeredBefore = true
		return 
	}

	t.HasTriggeredBefore = false
	t.HasTriggeredAfter = false
}

func (t *Template_{{ template_name }}) MarshalJSON() ([]byte, error) {
	return json.Marshal(map[string]interface{}{
		"usage_name":    t.UsageName,
		"has_triggered_before": t.HasTriggeredBefore,
		"has_triggered_after": t.HasTriggeredAfter,
		"usage_type": "OPERATION",
	})
}